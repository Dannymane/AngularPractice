{"ast":null,"code":"import { HEROES } from './mock-heroes';\nimport * as i0 from \"@angular/core\";\nexport class HeroService {\n  constructor() {}\n  getHeroes() {\n    return HEROES;\n  }\n  static #_ = this.ɵfac = function HeroService_Factory(t) {\n    return new (t || HeroService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroService,\n    factory: HeroService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HEROES","HeroService","constructor","getHeroes","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Work\\Material for preparing for the interview\\Angular\\AngularPractice\\tour-of-heroes1\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\n\n@Injectable({\n  providedIn: 'root' \n  // The providedIn: 'root' configuration means that Angular will create a single instance of HeroService\n  //  at the root level of your application and make it available for injection to any component or service\n  //   that requests it (without providing in \"providers:\"). SINGLETON\n})\nexport class HeroService {\n\n  constructor() { }\n\n  getHeroes(): Hero[]{\n    return HEROES;\n  }\n}\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAe;;AAQtC,OAAM,MAAOC,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,SAASA,CAAA;IACP,OAAOH,MAAM;EACf;EAAC,QAAAI,CAAA,G;qBANUH,WAAW;EAAA;EAAA,QAAAI,EAAA,G;WAAXJ,WAAW;IAAAK,OAAA,EAAXL,WAAW,CAAAM,IAAA;IAAAC,UAAA,EALV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}