{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../message.service\";\nimport * as i2 from \"@angular/common\";\nfunction MessagesComponent_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ms_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ms_r2, \"\");\n  }\n}\nfunction MessagesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Messages\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.messageService.clear());\n    });\n    i0.ɵɵtext(4, \"Clear messages\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MessagesComponent_div_0_div_5_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messageService.messages);\n  }\n}\nexport class MessagesComponent {\n  //  The messageService property must be public because you're going to bind to it in the template.\n  //  Angular only binds to public component properties.\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  static #_ = this.ɵfac = function MessagesComponent_Factory(t) {\n    return new (t || MessagesComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessagesComponent,\n    selectors: [[\"app-messages\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"type\", \"clear\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function MessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessagesComponent_div_0_Template, 6, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.messageService.messages.length);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ms_r2","ɵɵlistener","MessagesComponent_div_0_Template_button_click_3_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","messageService","clear","ɵɵtemplate","MessagesComponent_div_0_div_5_Template","ɵɵproperty","ctx_r0","messages","MessagesComponent","constructor","_","ɵɵdirectiveInject","i1","MessageService","_2","selectors","decls","vars","consts","template","MessagesComponent_Template","rf","ctx","MessagesComponent_div_0_Template","length"],"sources":["C:\\Work\\Material for preparing for the interview\\Angular\\AngularPractice\\tour-of-heroes1\\src\\app\\messages\\messages.component.ts","C:\\Work\\Material for preparing for the interview\\Angular\\AngularPractice\\tour-of-heroes1\\src\\app\\messages\\messages.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent {\n  //  The messageService property must be public because you're going to bind to it in the template.\n  //  Angular only binds to public component properties.\nconstructor(public messageService: MessageService){}\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button type=\"clear\" (click)=\"messageService.clear()\">Clear messages</button>\n  <div *ngFor=\"let ms of messageService.messages\"> {{ms}}</div>\n\n</div>\n"],"mappings":";;;;;ICIEA,EAAA,CAAAC,cAAA,UAAgD;IAACD,EAAA,CAAAE,MAAA,GAAM;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAZH,EAAA,CAAAI,SAAA,GAAM;IAANJ,EAAA,CAAAK,kBAAA,MAAAC,KAAA,KAAM;;;;;;IAJzDN,EAAA,CAAAC,cAAA,UAA4C;IAEtCD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjBH,EAAA,CAAAC,cAAA,gBAAsD;IAAjCD,EAAA,CAAAO,UAAA,mBAAAC,yDAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAC,KAAA,EAAsB;IAAA,EAAC;IAACf,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC7EH,EAAA,CAAAgB,UAAA,IAAAC,sCAAA,iBAA6D;IAE/DjB,EAAA,CAAAG,YAAA,EAAM;;;;IAFgBH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAkB,UAAA,YAAAC,MAAA,CAAAL,cAAA,CAAAM,QAAA,CAA0B;;;ADIhD,OAAM,MAAOC,iBAAiB;EAC5B;EACA;EACFC,YAAmBR,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAkB;EAAC,QAAAS,CAAA,G;qBAHvCF,iBAAiB,EAAArB,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBN,iBAAiB;IAAAO,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BlC,EAAA,CAAAgB,UAAA,IAAAoB,gCAAA,iBAMM;;;QANApC,EAAA,CAAAkB,UAAA,SAAAiB,GAAA,CAAArB,cAAA,CAAAM,QAAA,CAAAiB,MAAA,CAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}